{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/auth.service.ts","./src/app/be-jobs/be-jobs.component.css","./src/app/be-jobs/be-jobs.component.html","./src/app/be-jobs/be-jobs.component.ts","./src/app/collection-viewer/collection-viewer.component.css","./src/app/collection-viewer/collection-viewer.component.html","./src/app/collection-viewer/collection-viewer.component.ts","./src/app/dashboard/dashboard.component.css","./src/app/dashboard/dashboard.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/mongo-dashboard/mongo-dashboard.component.css","./src/app/mongo-dashboard/mongo-dashboard.component.html","./src/app/mongo-dashboard/mongo-dashboard.component.ts","./src/app/mongo.service.ts","./src/app/mongo/mongo.component.css","./src/app/mongo/mongo.component.html","./src/app/mongo/mongo.component.ts","./src/app/ms-asset-detail/ms-asset-detail.component.css","./src/app/ms-asset-detail/ms-asset-detail.component.html","./src/app/ms-asset-detail/ms-asset-detail.component.ts","./src/app/ms-asset-form-model.ts","./src/app/ms-asset-form/ms-asset-form.component.css","./src/app/ms-asset-form/ms-asset-form.component.html","./src/app/ms-asset-form/ms-asset-form.component.ts","./src/app/ms-asset.service.ts","./src/app/ms-asset.ts","./src/app/ms-assets/ms-assets.component.css","./src/app/ms-assets/ms-assets.component.html","./src/app/ms-assets/ms-assets.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes} from '@angular/router';\nimport { MsAssetsComponent } from './ms-assets/ms-assets.component';\nimport {MongoDashboardComponent} from './mongo-dashboard/mongo-dashboard.component';\nimport {BeJobsComponent} from './be-jobs/be-jobs.component';\nimport {DashboardComponent} from './dashboard/dashboard.component';\n\nconst routes: Routes = [\n  { path: 'assets', component: MsAssetsComponent},\n  { path: 'mongodashboard', component: MongoDashboardComponent},\n  { path: 'bejobs', component: BeJobsComponent },\n  { path: 'dashboard', component: DashboardComponent },\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes)],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","module.exports = \"/* The sidebar menu */\\r\\n.divMain{\\r\\n  background-color: #D8D8D8;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div class=\\\"container-fluid divMain\\\">\\r\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light justify-content-between\\\" style=\\\"background: white; border-width: 5px; border-color: black\\\" >\\r\\n    <a class=\\\"navbar-brand\\\" routerLink=\\\"/dashboard\\\">AWS-timeseries</a>\\r\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n  </nav>\\r\\n  <div class=\\\"row\\\" >\\r\\n    <div class=\\\"col-sm-2 col-md-2 col-lg-2 col-xl-2\\\" >\\r\\n      <nav class=\\\"navbar navbar-expand navbar-light navbar-expand-lg px-0 flex-row flex-nowrap\\\" style=\\\"background: white\\\">\\r\\n        <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarWEX\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n          <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n        </button>\\r\\n        <div class=\\\"navbar-collapse collapse\\\" id=\\\"navbarWEX\\\">\\r\\n          <div class=\\\"nav flex-sm-column flex-row\\\">\\r\\n            <a class=\\\"nav-item nav-link\\\" style=\\\"color: black\\\" routerLink=\\\"/assets\\\">Home</a>\\r\\n            <a class=\\\"nav-link\\\" style=\\\"color: black\\\" routerLink=\\\"/assets\\\">Assets</a>\\r\\n            <a class=\\\"nav-link\\\" style=\\\"color: black\\\" routerLink=\\\"/bejobs\\\">Back-End Jobs</a>\\r\\n            <a class=\\\"nav-link\\\" style=\\\"color: black\\\" routerLink=\\\"/mongodashboard\\\">Mongo Viewer</a>\\r\\n          </div>\\r\\n        </div>\\r\\n      </nav>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-10 col-md-10 col-lg-10 col-xl-10\\\">\\r\\n      <router-outlet></router-outlet>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { CollectionViewerComponent } from './collection-viewer/collection-viewer.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { MongoComponent } from './mongo/mongo.component';\r\nimport { MongoService } from './mongo.service';\r\n\r\nimport { MsAssetsComponent } from './ms-assets/ms-assets.component';\r\nimport { MsAssetDetailComponent } from './ms-asset-detail/ms-asset-detail.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { provideRoutes } from '@angular/router';\r\nimport { MongoDashboardComponent } from './mongo-dashboard/mongo-dashboard.component';\r\nimport { BeJobsComponent } from './be-jobs/be-jobs.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport {NgxJsonViewerModule} from 'ngx-json-viewer';\r\nimport {AceEditorModule} from 'ng2-ace-editor';\r\nimport { MsAssetFormComponent } from './ms-asset-form/ms-asset-form.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MongoComponent,\r\n    CollectionViewerComponent,\r\n    MsAssetsComponent,\r\n    MsAssetDetailComponent,\r\n    MongoDashboardComponent,\r\n    BeJobsComponent,\r\n    DashboardComponent,\r\n    MsAssetFormComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    AppRoutingModule,\r\n    NgbModule.forRoot(),\r\n    NgxJsonViewerModule,\r\n    AceEditorModule\r\n  ],\r\n  providers: [MongoService],\r\n  bootstrap: [AppComponent]\r\n})\r\n\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable()\nexport class AuthService {\n\n  baseUrl: 'http://localhost:3030/auth/login';\n\n  constructor(private http: HttpClient) {\n  }\n\n  attemptAuth(email: string, password: string): Observable <any> {\n    const credentials = {email: email, password: password};\n    console.log('attempAuth ::' + credentials);\n    return this.http.post(this.baseUrl, credentials);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth.service.ts","module.exports = \".be-jobs-div-principal{\\r\\n  background-color: white;\\r\\n  margin-top: 10px;\\r\\n  margin-bottom: 5px;\\r\\n  margin-left: 1px;\\r\\n  margin-right: 1px;\\r\\n}\\r\\n.be-jobs-div-secondary{\\r\\n  margin-top: 10px;\\r\\n  margin-bottom: 5px;\\r\\n  margin-left: 1px;\\r\\n  margin-right: 1px;\\r\\n}\\r\\nh3 {\\r\\n  /*color: #004a99;*/\\r\\n  color: black;\\r\\n}\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/be-jobs/be-jobs.component.css\n// module id = ./src/app/be-jobs/be-jobs.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container be-jobs-div-principal\\\">\\n  <h3>Back-End Jobs</h3>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col text-center\\\">\\n      <h4>Access Token</h4>\\n      <textarea rows=\\\"15\\\" cols=\\\"50\\\" >Test</textarea>\\n    </div>\\n  </div>\\n  <div class=\\\"row text-center\\\">\\n    <div class=\\\"col\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"startBeJobs()\\\">Start</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"stopBeJobs()\\\">Stop</button>\\n    </div>\\n  </div>\\n  <!--\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col text-center\\\">\\n      <h4>Credentials</h4>\\n      <input type=\\\"email\\\"\\n             [(ngModel)]=\\\"userEmail\\\" >Email\\n      <input type=\\\"password\\\"\\n             [(ngModel)]=\\\"userPassword\\\" >Password\\n      <button type=\\\"submit\\\" (click)=\\\"getApiToken(userEmail, userPassword)\\\">Get Token</button>\\n    </div>\\n  </div>\\n  -->\\n</div>\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/be-jobs/be-jobs.component.html\n// module id = ./src/app/be-jobs/be-jobs.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { environment } from '../../environments/environment.prod';\nimport { AuthService } from '../auth.service';\nimport {Observable} from 'rxjs/Observable';\n\n@Component({\n  selector: 'app-be-jobs',\n  templateUrl: './be-jobs.component.html',\n  styleUrls: ['./be-jobs.component.css'],\n  providers: [AuthService]\n})\nexport class BeJobsComponent implements OnInit {\n  userEmail: string;\n  userPassword: string;\n\n  runningStatus = true;\n\n  constructor(\n    private authService: AuthService) {  }\n  ngOnInit() {\n  }\n\n  public getApiToken (userEmail, userPassword): void {\n    this.authService.attemptAuth(userEmail, userPassword)\n      .subscribe();\n    console.log(this.authService);\n  }\n\n  public fetchToken () {\n    fetch('http://localhost:3030/access_token',\n      {\n        credentials: 'include',\n        headers: {'Cache-Control': 'no-cache'}\n      }).then(function (resp) {\n      return resp.json();\n    }).then(function (parsedResp) {\n      console.log('Access Token ' + parsedResp.access_token);\n      this.runningStatus = parsedResp.this.runningStatus;\n    });\n  }\n  public startBeJobs() {\n    this.runningStatus = true;\n  }\n  public stopBeJobs() {\n    this.runningStatus = false;\n  }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/be-jobs/be-jobs.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/collection-viewer/collection-viewer.component.css\n// module id = ./src/app/collection-viewer/collection-viewer.component.css\n// module chunks = main","module.exports = \"<form>\\r\\n<div class=\\\"form-group\\\" style=\\\"text-align: left\\\">\\r\\n  <label for=\\\"expression\\\">Expression:</label>\\r\\n  <input id=\\\"expression\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"expression\\\" [(ngModel)]=\\\"expression\\\">\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <button class=\\\"btn btn-primary\\\" (click)=\\\"setDifferentExpression()\\\">Read data</button>\\r\\n    <button class=\\\"btn btn-primary\\\" (click)=\\\"selectAll()\\\">Select All</button>\\r\\n    <button class=\\\"btn btn-primary\\\" (click)=\\\"deselectAll()\\\">Deselect all</button>\\r\\n    <button class=\\\"btn btn-primary\\\" (click)=\\\"deleteSelected()\\\">Delete selected</button>\\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"collectionsDataArray\\\">\\r\\n  <div class=\\\"row\\\" *ngFor=\\\"let collection of collectionsDataArray; let i = index; trackBy: i\\\">\\r\\n    <div class=\\\"card col-10\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        {{ collection.content }}\\r\\n      </div>\\r\\n    </div>\\r\\n    <input type=\\\"checkbox\\\" [name]=\\\"'check' + i\\\" [(ngModel)]=\\\"collection.checked\\\" class=\\\"col-2\\\">\\r\\n  </div>\\r\\n  <ngb-pagination [maxSize]=\\\"12\\\" boundaryLinks=\\\"true\\\" ellipses=\\\"true\\\" (pageChange)=\\\"pageChange($event)\\\" [pageSize]=\\\"7\\\" [collectionSize]=\\\"collectionSize\\\" [(page)]=\\\"page\\\" aria-label=\\\"Default pagination\\\"></ngb-pagination>\\r\\n</div>\\r\\n</form>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/collection-viewer/collection-viewer.component.html\n// module id = ./src/app/collection-viewer/collection-viewer.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport {MongoService} from \"../mongo.service\";\r\nimport {Observable} from \"rxjs/Observable\";\r\nimport 'rxjs/add/observable/forkJoin';\r\n\r\n@Component({\r\n  selector: 'app-collection-viewer',\r\n  templateUrl: './collection-viewer.component.html',\r\n  styleUrls: ['./collection-viewer.component.css']\r\n})\r\nexport class CollectionViewerComponent implements OnInit {\r\n\r\n  selectedCollection: string;\r\n\r\n  public expression: string = '';\r\n\r\n  error: string;\r\n\r\n  page = 1;\r\n\r\n  collectionSize: number;\r\n\r\n  collectionsDataArray: ModelClass[];\r\n\r\n  constructor(private mongoService: MongoService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public setDifferentCollection(collectionname: string) {\r\n    console.log('Set different collection ' + collectionname);\r\n    this.selectedCollection = collectionname;\r\n    this.collectionsDataArray = [];\r\n    this.mongoService.getSelectedCollection(collectionname, this.expression).subscribe(data => {\r\n      this.collectionSize = data.count;\r\n      data.response.map(elem => {\r\n        this.collectionsDataArray.push(new ModelClass(JSON.stringify(elem)));\r\n      });\r\n      this.error = null;\r\n    }, err => {\r\n      const message = 'Error while reading collections';\r\n      console.log(message);\r\n      this.error = message;\r\n    })\r\n  }\r\n\r\n  public deleteSelected() {\r\n    const tasks = [];\r\n    this.collectionsDataArray.forEach(coll => {\r\n      if (coll.checked) {\r\n        tasks.push(this.mongoService.deleteSelected(this.selectedCollection, JSON.parse(coll.content)['_id']));\r\n      }\r\n    });\r\n    Observable.forkJoin(...tasks).subscribe(resp => {\r\n      console.log('finished');\r\n      this.setDifferentExpression();\r\n    })\r\n  }\r\n\r\n  public deselectAll() {\r\n    this.collectionsDataArray.forEach(coll => {\r\n      coll['checked'] = false;\r\n    })\r\n  }\r\n\r\n  public selectAll() {\r\n    this.collectionsDataArray.forEach(coll => {\r\n      coll['checked'] = true;\r\n    })\r\n\r\n  }\r\n\r\n  public setDifferentExpression() {\r\n    console.log('Set different collection ' + this.selectedCollection + ', expression: ' + this.expression);\r\n    //this.selectedCollection = collectionname;\r\n    this.collectionsDataArray = [];\r\n    this.mongoService.getSelectedCollection(this.selectedCollection, this.expression).subscribe(data => {\r\n      this.collectionSize = data.count;\r\n      data.response.map(elem => {\r\n        this.collectionsDataArray.push(new ModelClass(JSON.stringify(elem)));\r\n      });\r\n      this.error = null;\r\n    }, err => {\r\n      const message = 'Error while reading collections';\r\n      console.log(message);\r\n      this.error = message;\r\n    })\r\n  }\r\n\r\n  public pageChange(event) {\r\n    console.log('pagechange ' + event + ', page ' + this.page);\r\n    this.collectionsDataArray = [];\r\n    this.mongoService.getSelectedCollection(this.selectedCollection, this.expression, (event-1) * 7, 7).subscribe(data => {\r\n      this.collectionSize = data.count;\r\n      data.response.map(elem => {\r\n        this.collectionsDataArray.push(new ModelClass(JSON.stringify(elem)));\r\n      });\r\n      this.error = null;\r\n    }, err => {\r\n      const message = 'Error while reading collections';\r\n      console.log(message);\r\n      this.error = message;\r\n    })\r\n  }\r\n}\r\n\r\nclass ModelClass {\r\n\r\n\r\n  constructor(content: string) {\r\n    this.content = content;\r\n  }\r\n\r\n  content: string;\r\n  checked: boolean = false;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/collection-viewer/collection-viewer.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/dashboard.component.css\n// module id = ./src/app/dashboard/dashboard.component.css\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"container-fluid\\\">\\n  <h1>\\n    Angular AWS-timeseries!\\n  </h1>\\n  <ul class=\\\"nav flex-column\\\">\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link active\\\" routerLink=\\\"/assets\\\">Assets</a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link\\\" routerLink=\\\"/bejobs\\\">Back-End Jobs</a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link\\\" routerLink=\\\"/mongodashboard\\\">Mongo Viewer</a>\\n    </li>\\n  </ul>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/dashboard.component.html\n// module id = ./src/app/dashboard/dashboard.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/dashboard.component.ts","module.exports = \".mongo-dashboard-div-principal{\\r\\n  background-color: white;\\r\\n  margin-top: 10px;\\r\\n  margin-bottom: 5px;\\r\\n  margin-left: 1px;\\r\\n  margin-right: 1px;\\r\\n}\\r\\n.mongo-dashboard-div-secondary{\\r\\n  background-color: white;\\r\\n  margin-top: 10px;\\r\\n  margin-bottom: 5px;\\r\\n  margin-left: 1px;\\r\\n  margin-right: 1px;\\r\\n  padding: 5px;\\r\\n}\\r\\nh3 {\\r\\n  /*color: #004a99;*/\\r\\n  color: black;\\r\\n}\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/mongo-dashboard/mongo-dashboard.component.css\n// module id = ./src/app/mongo-dashboard/mongo-dashboard.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container-fluid\\\" style=\\\"text-align:center\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-3\\\">\\n      <div class=\\\"mongo-dashboard-div-principal\\\">\\n        <app-mongo (collectionChanged)=\\\"collectionViewer.setDifferentCollection($event)\\\"></app-mongo>\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-7\\\">\\n      <div class=\\\"mongo-dashboard-div-secondary\\\">\\n        <h3>Angular Mongo viewer!</h3>\\n        <app-collection-viewer #collectionViewer></app-collection-viewer>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/mongo-dashboard/mongo-dashboard.component.html\n// module id = ./src/app/mongo-dashboard/mongo-dashboard.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-mongo-dashboard',\n  templateUrl: './mongo-dashboard.component.html',\n  styleUrls: ['./mongo-dashboard.component.css']\n})\nexport class MongoDashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/mongo-dashboard/mongo-dashboard.component.ts","import { Injectable } from '@angular/core';\r\nimport {Observable} from \"rxjs/Observable\";\r\nimport {CollectionResponse, OneCollectionResponse} from \"./collectionResponse\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {environment} from \"../environments/environment\";\r\n\r\n@Injectable()\r\nexport class MongoService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  public getCollections(): Observable<CollectionResponse> {\r\n    return this.httpClient.get<CollectionResponse>(environment.baseUrl + '/mongoData');\r\n  }\r\n\r\n  public getSelectedCollection(collectionName: string, expression: string, skip: number = 0, limit: number = 7): Observable<OneCollectionResponse> {\r\n    return this.httpClient.get<OneCollectionResponse>(environment.baseUrl + '/mongoData?collection=' + collectionName + '&inputName=' + encodeURIComponent(expression) + '&skip=' + skip + '&limit=' + limit);\r\n  }\r\n\r\n  public deleteSelected(collectionName: string, expression: string): Observable<Object> {\r\n    return this.httpClient.get<Object>(environment.baseUrl + '/mongoRemove?collection=' + collectionName + '&inputName=' + encodeURIComponent(expression));\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/mongo.service.ts","module.exports = \"li.active span {\\r\\n  background-color: darkblue;\\r\\n  color: white;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/mongo/mongo.component.css\n// module id = ./src/app/mongo/mongo.component.css\n// module chunks = main","module.exports = \"<h2>\\r\\n  Mongo collections:\\r\\n</h2>\\r\\n\\r\\n<div *ngIf=\\\"collections\\\">\\r\\n  <ul *ngFor=\\\"let collection of collections\\\" class=\\\"navbar\\\">\\r\\n    <li [ngClass]=\\\"{'active': selectedCollection && collection === selectedCollection, 'nav-item': true}\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"selectCollection(collection)\\\">\\r\\n      <span>{{collection | titlecase}}</span>\\r\\n    </li>\\r\\n  </ul>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/mongo/mongo.component.html\n// module id = ./src/app/mongo/mongo.component.html\n// module chunks = main","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { MongoService } from '../mongo.service';\r\n\r\n@Component({\r\n  selector: 'app-mongo',\r\n  templateUrl: './mongo.component.html',\r\n  styleUrls: ['./mongo.component.css']\r\n})\r\nexport class MongoComponent implements OnInit {\r\n\r\n  @Output()\r\n  private collectionChanged = new EventEmitter();\r\n\r\n  public collections: string[];\r\n  public selectedCollection: string;\r\n  public error: string;\r\n\r\n  constructor(private mongoService: MongoService) { }\r\n\r\n  ngOnInit() {\r\n    this.mongoService.getCollections().subscribe(data => {\r\n      this.collections = data.collections;\r\n      this.error = null;\r\n    }, err => {\r\n      const message = 'Error while reading collections';\r\n      console.log(message);\r\n      this.error = message;\r\n    });\r\n  }\r\n\r\n  public selectCollection(selectedCollection) {\r\n    this.selectedCollection = selectedCollection;\r\n    this.collectionChanged.emit(selectedCollection);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/mongo/mongo.component.ts","module.exports = \".msAsset-detail-div{\\r\\n  background-color: white;\\r\\n  margin-top: 10px;\\r\\n  margin-bottom: 5px;\\r\\n  margin-left: 1px;\\r\\n  margin-right: 1px;\\r\\n}\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/ms-asset-detail/ms-asset-detail.component.css\n// module id = ./src/app/ms-asset-detail/ms-asset-detail.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"msAsset\\\" class=\\\"container msAsset-detail-div\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <h4>Details: JSON Object</h4>\\n        <ngx-json-viewer [json]=\\\"msAsset\\\" [expanded]=\\\"false\\\"></ngx-json-viewer>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n<div *ngIf=\\\"msAsset\\\" class=\\\"container msAsset-detail-div\\\">\\n  <h4>Details: JSON Editor</h4>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"container\\\">\\n      <ace-editor [(text)]=\\\"code\\\" mode=\\\"json\\\" style=\\\"height:400px;\\\"></ace-editor>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/ms-asset-detail/ms-asset-detail.component.html\n// module id = ./src/app/ms-asset-detail/ms-asset-detail.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { MsAsset } from '../ms-asset';\nimport {MsAssetService} from '../ms-asset.service';\nimport {MsAssetsJSON} from '../stringMsAsset';\n\n@Component({\n  selector: 'app-ms-asset-detail',\n  templateUrl: './ms-asset-detail.component.html',\n  styleUrls: ['./ms-asset-detail.component.css'],\n\n})\n\nexport class MsAssetDetailComponent implements OnInit {\n  @Input() msAsset: MsAsset;\n  public msAssetsJSON: MsAssetsJSON[];\n\n  constructor(private msAssetService: MsAssetService) { }\n\n  ngOnInit() {\n    this.getRawMsAsset();\n  }\n  /**Gets the raw data of an asset from the service**/\n  getRawMsAsset() {\n    this.msAssetService.getRawMsAsset().subscribe(\n      result => {\n        this.msAssetsJSON = result as MsAssetsJSON[];\n        console.log(this.msAssetsJSON);\n      });\n  }\n/**Stringifies the JSON object of an asset**/\n  get code () {\n    return JSON.stringify(this.msAsset, null, 2);\n  }\n\n  set code (v) {\n    try {\n      this.msAssetsJSON = JSON.parse(v);\n    }\n    catch (e) {\n      console.log('Error occured while you were typing the JSON');\n    }\n    ;\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/ms-asset-detail/ms-asset-detail.component.ts","export class MsAssetFormModel {\n\n  constructor(\n    public url: string,\n    public method: string,\n    public body: string\n  ) {  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/ms-asset-form-model.ts","module.exports = \".msAssetForm-div{\\r\\n  background-color: white;\\r\\n  margin-top: 5px;\\r\\n  margin-bottom: 50px;\\r\\n  margin-left: 1px;\\r\\n  margin-right: 1px;\\r\\n  /*padding: 10px;*/\\r\\n}\\r\\n.msAssetForm-form{\\r\\n  margin-top: 5px;\\r\\n  margin-bottom: 5px;\\r\\n  margin-left: 1px;\\r\\n  margin-right: 1px;\\r\\n  /*padding: 10px;*/\\r\\n}\\r\\n/*\\r\\ntextarea{\\r\\n  visibility:hidden;\\r\\n}\\r\\n*/\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/ms-asset-form/ms-asset-form.component.css\n// module id = ./src/app/ms-asset-form/ms-asset-form.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container msAssetForm-div\\\">\\n  <h4>Assets Form</h4>\\n  <form (ngSubmit)=\\\"onSubmit()\\\" #msAssetForm=\\\"ngForm\\\" class=\\\"msAssetForm-form\\\">\\n    <div class=\\\"form-group row\\\">\\n      <div class=\\\"col\\\">\\n        <label for=\\\"urlRequest\\\">Url</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"urlRequest\\\"\\n               required\\n               [(ngModel)]=\\\"inputUrl\\\" name=\\\"url\\\"\\n               #spy\\n               placeholder=\\\"http://localhost:3000/assets\\\">\\n        <br>TODO: remove this: {{spy.className}}\\n      </div>\\n      <div class=\\\"col\\\">\\n        <label for=\\\"method\\\">Method</label>\\n        <select class=\\\"form-control\\\" id=\\\"method\\\"\\n                required\\n                [(ngModel)]=\\\"model.method\\\" name=\\\"method\\\">\\n          <option *ngFor=\\\"let method of methods\\\" [value]=\\\"method\\\">{{method}}</option>\\n        </select>\\n      </div>\\n      <div class=\\\"col\\\" [ngSwitch]=\\\"model.method\\\">\\n            <button *ngSwitchDefault type=\\\"submit\\\" class=\\\"btn btn-success\\\"\\n                    [disabled]=\\\"!msAssetForm.form.valid\\\"\\n                    (click)=\\\"getMsAsset(inputUrl)\\\">\\n              Get\\n            </button>\\n            <button *ngSwitchCase=\\\"'post'\\\" type=\\\"submit\\\" class=\\\"btn btn-secondary\\\"\\n                    [disabled]=\\\"!msAssetForm.form.valid\\\"\\n                    (click)=\\\"postMsAsset(model.body)\\\">\\n              Add\\n            </button>\\n            <button *ngSwitchCase=\\\"'put'\\\" type=\\\"submit\\\" class=\\\"btn btn-info\\\"\\n                    [disabled]=\\\"!msAssetForm.form.valid\\\"\\n                    (click)=\\\"putMsAsset(model.body, inputUrl)\\\">\\n              Update\\n            </button>\\n            <button *ngSwitchCase=\\\"'delete'\\\" type=\\\"submit\\\" class=\\\"btn btn-danger\\\"\\n                    [disabled]=\\\"!msAssetForm.form.valid\\\"\\n                    (click)=\\\"deleteMsAsset(inputUrl)\\\">\\n              Delete\\n            </button>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"model.method !== 'get'\\\" class=\\\"form-group row\\\">\\n      <div class=\\\"col\\\">\\n        <label for=\\\"body\\\">Body</label>\\n        <textarea class=\\\"form-control text-hide\\\" id=\\\"body\\\"\\n                  required\\n                  [(ngModel)]=\\\"model.body\\\" name=\\\"body\\\">\\n        </textarea>\\n        <ace-editor [(text)]=\\\"model.body\\\" mode=\\\"json\\\" style=\\\"height:400px;\\\"></ace-editor>\\n      </div>\\n      <div class=\\\"col\\\">\\n        <h6>Response</h6>\\n        <br>\\n        <ace-editor [(text)]=\\\"stringMsAsset\\\" mode=\\\"json\\\" style=\\\"height:400px;\\\"></ace-editor>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"model.method === 'get'\\\" class=\\\"form-group row\\\">\\n      <div class=\\\"col\\\">\\n        <h6>Response</h6>\\n        <br>\\n        <ace-editor [(text)]=\\\"msAssetResponse\\\" mode=\\\"json\\\" style=\\\"height:400px;\\\"></ace-editor>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/ms-asset-form/ms-asset-form.component.html\n// module id = ./src/app/ms-asset-form/ms-asset-form.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {MsAssetFormModel} from '../ms-asset-form-model';import { MsAssetService } from '../ms-asset.service';\nimport { MsAsset } from '../ms-asset';\nimport {ActivatedRoute} from '@angular/router';\nimport { environment} from '../../environments/environment';\n\n\n@Component({\n  selector: 'app-ms-asset-form',\n  templateUrl: './ms-asset-form.component.html',\n  styleUrls: ['./ms-asset-form.component.css'],\n  providers: [MsAssetService]\n})\nexport class MsAssetFormComponent implements OnInit {\n  msAsset: MsAsset;\n  msAssets: MsAsset[];\n  method: string;\n  inputUrl: string;\n  stringMsAsset: string;\n  private msAssetsURL = environment.baseUrl; // URL to web api\n  submitted = false;\n  msAssetFormModel: MsAssetFormModel;\n\n  methods = ['get', 'post', 'put', 'delete'];\n\n  model = new MsAssetFormModel(\n    this.msAssetsURL,\n    'post',\n    '{\\n' +\n    '  \"name\": \"XWingEdit\",\\n' +\n    '  \"assetId\": \"A0021\",\\n' +\n    '  \"id\": \"B0021\",\\n' +\n    '  \"description\": \"Hyperspace jump capable space ship\",\\n' +\n    '  \"parentTypeId\": \"mdsp.spaceship\",\\n' +\n    '  \"instantiable\": true,\\n' +\n    '  \"scope\": \"private\",\\n' +\n    '  \"variables\": [\\n' +\n    '    {\\n' +\n    '      \"name\": \"temperature\",\\n' +\n    '      \"dataType\": \"STRING\",\\n' +\n    '      \"unit\": \"C\",\\n' +\n    '      \"searchable\": true,\\n' +\n    '      \"length\": 3\\n' +\n    '    }\\n' +\n    '  ],\\n' +\n    '  \"fileAssignments\": [\\n' +\n    '    {\\n' +\n    '      \"key\": \"logo_small\",\\n' +\n    '      \"fileId\": \"c27a28b6eb16b507fabc11e75da8b4ce\"\\n' +\n    '    }\\n' +\n    '  ],\\n' +\n    '  \"aspects\": [\\n' +\n    '    {\\n' +\n    '      \"name\": \"leftWing\",\\n' +\n    '      \"aspectTypeId\": \"mdsp.wing\"\\n' +\n    '    }\\n' +\n    '  ]\\n' +\n    '}');\n\n  constructor(\n    private route: ActivatedRoute,\n    private msAssetService: MsAssetService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  /**Submit this form**/\n  onSubmit() { this.submitted = true; }\n\n\n  /**Call the API with parameters**/\n  public callApiWithParams() {\n    const urlCall = this.model.url + '/' + this.model.method + '/' + JSON.stringify(this.model.body);\n    console.log(urlCall);\n  }\n\n  /** Get MsAsset **/\n  getMsAsset(assetId): void {\n    // const assetId = +this.route.snapshot.paramMap.get('assetId');\n    this.msAssetService.getMsAsset(assetId).subscribe(msAsset => this.msAsset = msAsset);\n    console.log('GET method was called');\n  }\n\n  /**Subscribes to the POST request in the MsAssetService**/\n  postMsAsset(newMsAsset): void {\n    this.msAssetService.postMsAsset(newMsAsset)\n      .subscribe(msAsset => this.msAssets.push(msAsset));\n    console.log('POST method was called' + newMsAsset);\n  }\n\n  /**Subscribes to the PUT request in the MsAssetService**/\n  putMsAsset(bodyMsAsset, assetId): void {\n    this.msAssetService.putMsAsset(bodyMsAsset, assetId)\n      .subscribe();\n    console.log('PUT method was called');\n  }\n\n  /**Subscribes to the DELETE request in the MsAssetService**/\n  deleteMsAsset(assetId): void {\n    this.msAssetService.deleteMsAsset(assetId).subscribe();\n    console.log('DELETE method was called');\n  }\n\n  /**Stringifies the JSON object of an asset**/\n  get msAssetResponse () {\n    return JSON.stringify(this.msAsset, null, 2);\n  }\n\n  get newMsAsset() {\n    return JSON.stringify(this.newMsAsset, null, 2);\n  }\n\n  /**Stringifies the JSON object of an asset*/\n  stringifymsAssetResponse () {\n    this.stringMsAsset = JSON.stringify(this.msAsset, null, 2);\n    return this.stringMsAsset;\n  }\n\n  set code (v) {\n    try {\n      this.model.body = JSON.parse(v);\n    }\n    catch (e) {\n      console.log('Error occured while you were typing the JSON');\n    }\n    ;\n  }\n\n // TODO: Remove this when we're done\n  // get diagnostic() {return JSON.stringify(this.model)}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/ms-asset-form/ms-asset-form.component.ts","import { Injectable } from '@angular/core';\nimport { MsAsset } from './ms-asset';\nimport { Observable } from 'rxjs/Observable';\nimport {HttpClient, HttpErrorResponse, HttpHeaders} from '@angular/common/http';\nimport {environment} from '../environments/environment';\n\n\nconst httpOptions = {\n  headers: new HttpHeaders(({\n    'Content-Type': 'application/json',\n    'Authorization': 'my-auth-token'\n  }))\n};\n\n@Injectable()\nexport class MsAssetService {\n\n  // private msAssetsURL = 'http://localhost:3000/assets'; // URL to web api\n  // private msAssetsURL = '/api/assetmanagement/v3/assets'; // URL to web api\n  private msAssetsURL = environment.baseUrl + '/assets';\n\n  constructor(private http: HttpClient) { }\n\n  /** Gets ALL the assets */\n  getMsAssets(): Observable<MsAsset[]> {\n    return this.http.get<MsAsset[]>(this.msAssetsURL);\n  }\n/*\n  /** Gets ALL the assets\n  getMsAssetsAny(): Observable<object> {\n    return this.http.get<object>(this.msAssetsURL);\n  }\n  */\n  /** GET asset by Id*/\n  getMsAsset(assetId: number): Observable<MsAsset> {\n    const url = `${this.msAssetsURL}/${assetId}`;\n    return this.http.get<MsAsset>(url);\n  }\n\n  /** GET: retrieves the raw data without any format*/\n  getRawMsAsset() {\n    return this.http.get(this.msAssetsURL);\n  }\n\n  /** POST: add a new asset**/\n  postMsAsset (msAsset: MsAsset): Observable<MsAsset> {\n    return this.http.post<MsAsset>(this.msAssetsURL, msAsset, httpOptions);\n    // TODO: Change the URL\n  }\n\n  /** DELETE: delete an asset */\n  deleteMsAsset (assetId: string): Observable<MsAsset> {\n    const url = `${this.msAssetsURL}` + `/` + assetId;\n    return this.http.delete<MsAsset>(url, httpOptions);\n  }\n\n  /**PUT: update an asset  */\n  putMsAsset (bodyMsAsset: String, assetId: String): Observable<any> {\n    const url = `${this.msAssetsURL}` + `/` + assetId;\n    return this.http.put(url, bodyMsAsset, httpOptions);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/ms-asset.service.ts","export class MsAsset {\r\n  assetId: string;\r\n  id: string;\r\n  tenantId: string;\r\n  name: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/ms-asset.ts","module.exports = \".msAsset-div-principal{\\r\\n  background-color: white;\\r\\n  margin-top: 10px;\\r\\n  margin-bottom: 5px;\\r\\n  margin-left: 1px;\\r\\n  margin-right: 1px;\\r\\n}\\r\\n.msAsset-div-secondary{\\r\\n  background-color: white;\\r\\n  margin-top: 5px;\\r\\n  margin-bottom: 5px;\\r\\n  margin-left: 1px;\\r\\n  margin-right: 1px;\\r\\n  /*padding: 10px;*/\\r\\n}\\r\\n.msAsset-div-noBackGround{\\r\\n  margin-top: 5px;\\r\\n  margin-bottom: 5px;\\r\\n  margin-left: 1px;\\r\\n  margin-right: 1px;\\r\\n  /*padding: 10px;*/\\r\\n}\\r\\ntextarea {\\r\\n  -webkit-box-sizing: border-box;\\r\\n  box-sizing: border-box;\\r\\n\\r\\n  width: 100%;\\r\\n}\\r\\nh3 {\\r\\n  /*color: #004a99;*/\\r\\n  color: black;\\r\\n}\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/ms-assets/ms-assets.component.css\n// module id = ./src/app/ms-assets/ms-assets.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-5\\\">\\n      <div class=\\\"msAsset-div-principal\\\">\\n        <h3>My Assets</h3>\\n        <table class=\\\"table\\\">\\n          <thead>\\n            <tr>\\n              <th scope=\\\"col\\\">Name</th>\\n              <th scope=\\\"col\\\">Id</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let msAsset of msAssets\\\"\\n                (click)=\\\"onSelect(msAsset)\\\">\\n              <td>{{msAsset.name}}</td>\\n              <td>{{msAsset.assetId}}</td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-6\\\">\\n      <div class=\\\"container-fluid msAsset-div-noBackGround\\\">\\n        <app-ms-asset-detail [msAsset]=\\\"selectedMsAsset\\\"></app-ms-asset-detail>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <app-ms-asset-form></app-ms-asset-form>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/ms-assets/ms-assets.component.html\n// module id = ./src/app/ms-assets/ms-assets.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { MsAsset } from '../ms-asset';\n import { MsAssetsJSON } from '../stringMsAsset';\n// import { MSASSETS } from '../mock-ms-assets'; // Import from the file directly\nimport { MsAssetService } from '../ms-asset.service';\n\n@Component({\n  selector: 'app-ms-assets',\n  templateUrl: './ms-assets.component.html',\n  styleUrls: ['./ms-assets.component.css'],\n  providers: [MsAssetService]\n})\nexport class MsAssetsComponent implements OnInit {\n  // msAssets: MsAsset[];\n  msAssets: Object;\n  selectedMsAsset: MsAsset;\n  public msAssetsJSON: MsAssetsJSON[];\n  data: any = {};\n\n\n  constructor(private msAssetService: MsAssetService) {\n  }\n\n  ngOnInit() {\n    this.getMsAssets();\n    this.getRawMsAsset();\n  }\n\n  /** Displays the detail of a selected asset */\n  onSelect(msAsset: MsAsset): void {\n    this.selectedMsAsset = msAsset;\n  }\n\n  getMsAssets(): void {\n    this.msAssetService.getMsAssets().subscribe(msAssets => this.msAssets = msAssets);\n    // this.msAssets = this.msAssetService.getMsAssets();\n  }\n  /**Gets the raw data of all the assets**/\n  getRawMsAsset() {\n    this.msAssetService.getRawMsAsset().subscribe(\n      result => {\n        this.msAssetsJSON = result as MsAssetsJSON[];\n        console.log(this.msAssetsJSON);\n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/ms-assets/ms-assets.component.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  baseUrl: 'http://localhost:3000' // json-server URL\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}